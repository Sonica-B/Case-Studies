version: '3.8'

services:
  # API-based Product (GROUP4)
  ml-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: group4-ml-api:latest
    container_name: group4-ml-api-product
    environment:
      - HF_TOKEN=${HF_TOKEN}
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=5000
    ports:
      - "5000:5000"  # Gradio UI
      - "5001:5001"  # Python metrics
      - "5002:5002"  # Node exporter
    restart: unless-stopped
    networks:
      - group4-network

  # Locally Executed Product (GROUP4)
  ml-local:
    build:
      context: .
      dockerfile: Dockerfile.local
    image: group4-ml-local:latest
    container_name: group4-ml-local-product
    environment:
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=5003
    ports:
      - "5003:5003"  # Gradio UI
      - "5004:5004"  # Python metrics
      - "5005:5005"  # Node exporter
    volumes:
      - group4-model-cache:/root/.cache/huggingface
    restart: unless-stopped
    networks:
      - group4-network
    # Note: GPU support removed - not available on shared VM

  # Prometheus Server (GROUP4)
  prometheus:
    image: prom/prometheus:latest
    container_name: group4-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "5006:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - group4-prometheus-data:/prometheus
    networks:
      - group4-network
    restart: unless-stopped
    # Note: Removed hard dependency on ml-local since it might fail to start

  # Grafana Server (GROUP4)
  grafana:
    image: grafana/grafana:latest
    container_name: group4-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "5007:3000"
    volumes:
      - group4-grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - group4-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  group4-network:
    driver: bridge

volumes:
  group4-prometheus-data:
  group4-grafana-data:
  group4-model-cache: